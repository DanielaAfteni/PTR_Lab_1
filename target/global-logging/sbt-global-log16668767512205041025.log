[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 75.531ms
[debug]       Load.loadUnit: defsScala took 0.5063ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.3038 ms
[debug]           Load.resolveProject(global-plugins) took 55.7202ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 91.2906ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 111.0274ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2149ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 195.3841ms
[debug]   Load.apply: load took 334.7388ms
[debug]   Load.apply: resolveProjects took 4.6326ms
[debug]   Load.apply: finalTransforms took 42.8652ms
[debug]   Load.apply: config.delegates took 6.6149ms
[debug]   Load.apply: Def.make(settings)... took 315.8655ms
[debug]   Load.apply: structureIndex took 77.7662ms
[debug]   Load.apply: mkStreams took 2.0124ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3304.2992ms
[debug]           Load.loadUnit: plugins took 18.9492ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\user\IdeaProjects\demo\PTR_Lab_1\project
[debug]             Load.loadUnit: mkEval took 3.9558ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\IdeaProjects\demo\PTR_Lab_1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9329 ms
[info] loading settings for project ptr_lab_1-build from idea.sbt ...
[debug]               Load.resolveProject(ptr_lab_1-build) took 3.0432ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ptr_lab_1-build, base: C:\Users\user\IdeaProjects\demo\PTR_Lab_1\project, plugins: List(<none>))) took 5.4097ms
[debug] [Loading] Done in C:\Users\user\IdeaProjects\demo\PTR_Lab_1\project, returning: (ptr_lab_1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1625.3371ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.4082ms
[debug]         Load.loadUnit(file:/C:/Users/user/IdeaProjects/demo/PTR_Lab_1/project/, ...) took 1650.3789ms
[debug]       Load.apply: load took 1651.8161ms
[debug]       Load.apply: resolveProjects took 0.0812ms
[debug]       Load.apply: finalTransforms took 10.6162ms
[debug]       Load.apply: config.delegates took 0.333ms
[debug]       Load.apply: Def.make(settings)... took 71.2813ms
[debug]       Load.apply: structureIndex took 17.7626ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\user\IdeaProjects\demo\PTR_Lab_1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3150.6607ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\user\IdeaProjects\demo\PTR_Lab_1
[debug]       Load.loadUnit: mkEval took 0.1789ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\IdeaProjects\demo\PTR_Lab_1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0822 ms
[info] loading settings for project ptr_lab_1 from build.sbt ...
[debug]         Load.resolveProject(ptr_lab_1) took 20.3106ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ptr_lab_1, base: C:\Users\user\IdeaProjects\demo\PTR_Lab_1, plugins: List(<none>))) took 23.3499ms
[debug] [Loading] Done in C:\Users\user\IdeaProjects\demo\PTR_Lab_1, returning: (ptr_lab_1)
[debug]     Load.loadUnit: loadedProjectsRaw took 628.2056ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.9561ms
[debug]   Load.loadUnit(file:/C:/Users/user/IdeaProjects/demo/PTR_Lab_1/, ...) took 3789.4891ms
[debug] Load.apply: load took 3791.2798ms
[debug] Load.apply: resolveProjects took 0.0926ms
[debug] Load.apply: finalTransforms took 21.8568ms
[debug] Load.apply: config.delegates took 0.2008ms
[debug] Load.apply: Def.make(settings)... took 55.6594ms
[debug] Load.apply: structureIndex took 14.5733ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to PTR_Lab_1 (in build file:/C:/Users/user/IdeaProjects/demo/PTR_Lab_1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60421 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60421, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PTR_Lab_1 (in build file:/C:/Users/user/IdeaProjects/demo/PTR_Lab_1/)
[debug] > Exec(idea-shell, None, None)
